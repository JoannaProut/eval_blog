[
  {
    "path": "posts/2021-12-21-ebps/",
    "title": "Sad psychologist finds hope in program evaluation, implementation science, and memes",
    "description": "2021-- A year in which I am depressed about the state of evidence-based mental health supports and find hope in unexpected places, including the internet.",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-12-29",
    "categories": [],
    "contents": "\r\nWhen I started my doctorate in clinical child psychology in 2008, I was ready to learn the answers to solve all the world’s mental health problems.\r\nI never understood why my parents, both retired from 30+ years of serving youth and families, would get this glazed- over look in their eyes and start groaning when I would talk to them about “Evidence-based Practices.”\r\nEvidence-based Practices were SCIENTIFICALLY proven ways to help kids.\r\nWhy did they seem to hate them? Didn’t they want to help kids with SCIENCE?\r\nWhat kind of terrible people were my parents?\r\nNow that I am seven years out from finishing my doctorate, I worry that I get the same look in my eyes when people come to tell me about the latest EBP that is going to change the world.\r\nWorking in program evaluation for school mental health, I am perfectly positioned to see the challenges in moving evidence-based practices into real world settings. When a clinician or educator goes to a training to learn how to do a new treatment or method, I am the person who sends an email 3 months later asking them to take a survey about “how they’ve used what they learned.”\r\nOften, especially in the past few years, many people coming to trainings haven’t been able to use what they learned in quite the way that we had planned for them to. I have had the opportunity to talk to these people about what is getting in the way of them using these EBPs, what has helped them, and how they ended up using their training in a different way.\r\nBut where does all this feedback go? I can package it up and send it to our experts, but the EBPs don’t change.\r\nSeeing myself 20 years in the future, helping to roll out the same EBP with the same issues, was depressing. I was stuck.\r\n\r\n\r\n\r\nFortunately I have an amazing community of people, both colleagues I work with and people I have met on the internet (twitter has been great for this!) that want to keep moving the field forward.\r\nThe program evaluation community, including the 2021 American Evaluation Association annual conference, has been a great source of inspiration. Program evaluation really aims to integrate feedback from service providers and the people who are using and (hopefully!) benefiting from services.\r\nThe data science community blew my mind with design thinking. Talk about external validity!\r\nFor awhile I thought I needed to transition out of psychology to apply what I had learned, but having found implementation science….and even adaptation science…I am excited to see what can be done to make mental health supports easier for people (especially people in contexts that differ from “normative” settings) to use and benefit from!\r\nPlus, creating data systems to take feedback from service providers to the people who make decisions about what practices will be used and how gives me a great excuse to keep improving my data viz and reporting skills.\r\n\r\n\r\n\r\nYou can find more thoughts about this in my blog post from AEA 365:\r\nProut, J. (2021, October). BH TIG Week: Program Evaluation in Behavioral Health: Limitations of Expert-driven Models and New Directions. AEA 365: A Tip-a-Day By and For Evaluators. https://shar.es/aWds4j\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-12-21-ebps/busmeme.PNG",
    "last_modified": "2021-12-29T16:57:12-05:00",
    "input_file": {}
  },
  {
    "path": "posts/",
    "title": "Graduation Rates by High School Type in Baltimore, MD",
    "description": "For day 2 of the 30 Day Chart Challenge, I used waffle () to make a pictogram comparing graduation rates in different types of High Schools in Baltimore.",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-04-03",
    "categories": [],
    "contents": "\r\nPictogram Basics\r\nDay 2 of the 30 Day Chart Challenge involved making a pictogram! I love icons and pictograms but I struggle with using fonts in R so I had stuck to using excel, word, canva, etc for anything where I needed pictures.\r\nThis challenge was an opportunity to try again to get icons to work in R!\r\nI first looked at this great resource Building Pictograms at https://rud.is/rpubs/building-pictograms.html which guides you through the process of making a waffle chart and pictogram in R using the extrafont package with Font Awesome (FA) and ggplot + geom_waffle() & geom_pictogram ()\r\nI needed more help with making the extrafont package work, particularly getting Font Awesome (FA) loaded so I could use glyphs, so I also used these instructions from Making Infographics in R by ListenData at https://www.listendata.com/2019/06/create-infographics-with-r.html\r\nFirst thing is to load all the libraries! I am still unclear of how showtext works here.\r\n\r\n\r\n#Alternate resource about making pictograms in R, https://rud.is/rpubs/building-pictograms.html \r\n#more detail re installing font awesome https://www.listendata.com/2019/06/create-infographics-with-r.html\r\n\r\nlibrary(waffle)\r\nlibrary(extrafont)\r\nlibrary (showtext)\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\nLoading the fonts in extrafont and indicating that I am using windows? Not sure if I even need to do this bit.\r\n\r\n\r\nextrafont::loadfonts(quiet = TRUE, device = \"win\") #adding device = \"win\"\r\n\r\n\r\n\r\nHere I am making a tibble to see if R is finding Font Awesome in the list of available fonts. Font Awesome comes in the waffle package in the fonts folder, but you must double click each font file and click “install” to ensure that it is installed in your Windows Font Library (if you are using Windows).\r\n\r\n\r\nextrafont::fonttable() %>% \r\n  as_tibble() %>% \r\n  filter(grepl(\"Awesom\", FamilyName)) %>% \r\n  select(afmfile, FullName, FamilyName, FontName)\r\n\r\n\r\n# A tibble: 3 x 4\r\n  afmfile        FullName          FamilyName         FontName        \r\n  <chr>          <chr>             <chr>              <chr>           \r\n1 fa-brands-400~ Font Awesome 5 B~ Font Awesome 5 Br~ FontAwesome5Bra~\r\n2 fa-regular-40~ Font Awesome 5 F~ Font Awesome 5 Fr~ FontAwesome5Fre~\r\n3 fa-solid-900.~ Font Awesome 5 F~ Font Awesome 5 Fr~ FontAwesome5Fre~\r\n\r\nNow, I think we are using the showtext package to add the fonts to “system fonts” plus setting showtext to automatically run for the rest of this R session?\r\n\r\n\r\nfont_add(family = \"FontAwesome5Free-Solid\", regular = \"C:\\\\Users\\\\jprout\\\\OneDrive - University of Maryland School of Medicine\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\waffle\\\\fonts\\\\fa-solid-900.ttf\")\r\n\r\nfont_add(family = \"FontAwesome5Free-Regular\", regular = \"C:\\\\Users\\\\jprout\\\\OneDrive - University of Maryland School of Medicine\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\waffle\\\\fonts\\\\fa-regular-400.ttf\")\r\n\r\nfont_add(family =\"FontAwesome5Brands-Regular\", regular = \"C:\\\\Users\\\\jprout\\\\OneDrive - University of Maryland School of Medicine\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\waffle\\\\fonts\\\\fa-brands-400.ttf\")\r\n\r\nshowtext_auto()\r\n\r\n\r\n\r\nThis fa_grep () function lets you search for look for icons related to a key word within the Font Awesome package. My pictogram will be related to graduation rates so I searched for “graduation” and found that the traditional hat can be called “graduation-cap”.\r\n\r\n\r\nfa_grep(\"graduation\")\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"564\"],[\"graduation-cap\"],[\"solid\"],[\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\" width=\\\"24\\\" height=\\\"24\\\"><path d=\\\"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\\\"/><\\/svg>\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>name<\\/th>\\n      <th>type<\\/th>\\n      <th>glyph<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r\nIn addition to using the ggplot + geom_waffle() or geom_pictogram() method, the Listen Data tutorial uses the waffle () function.\r\nWaffle () is described in detail here: https://www.rdocumentation.org/packages/waffle/versions/0.7.0/topics/waffle\r\nData Viz & Advocating for Equity in Education and Healthcare\r\nOne of my interests is using data viz to increase equity, especially in education and behavioral health.\r\nA comparison that caught my attention recently was graduation rates by High School type in Baltimore, MD. Baltimore adopted “school choice” to give students from lower-income neighborhoods better educational opportunities. While school choice influences student education as early as pre-kindergarten, a defining step occurs when 8th graders apply to the High schools they will enter in 9th grade. There are three major categories of public High Schools:\r\n“Traditional Selective” High Schools require students to apply and select students based on criteria such as grade point average, standardized test scores, and attendance.\r\n“Traditional Non-selective” High Schools do not use criteria such as grades or test scores to screen students. Students do not have to apply to attend them but are automatically placed in them based on their address.\r\n“Charter” High Schools are schools of choice that can determine their own criteria for student entrance. Students have to apply to attend them.\r\nGraduation rates for these different types of High Schools must be monitored to ensure that outcomes are equitable. I decided to use a pictogram to display graduation rates (or number of students out of 10 that are likely to graduate) based on recent data presented to the Maryland State Department of Education (MSDE) school board.\r\nI finally make a pictogram…\r\nI decided to use the waffle () function and have the number of colored hats would represent the number of students out of 10 that were expected to graduate while gray hats would represent students NOT expected to graduate.\r\n\r\n\r\nselective <- waffle(\r\n  c(`Graduation` = 9, `No Graduation` = 1), \r\n  rows = 1, colors = c(\"red\", \"gray\"),\r\n  use_glyph = \"graduation-cap\", \r\n  glyph_size = 12, \r\n  title = 'Traditional Selective',\r\n   legend_pos=\"none\"\r\n) + theme(plot.title = element_text(hjust = 0.5))\r\n\r\nselective\r\n\r\n\r\n\r\n\r\nMaking one for graduation rates in Charter High Schools in Baltimore using a different color.\r\n\r\n\r\ncharter <- waffle(\r\n c(`Graduation` = 8, `No Graduation` = 2), \r\n  rows = 1, colors = c(\"gold\", \"gray\"),\r\n  use_glyph = \"graduation-cap\", \r\n  glyph_size = 12, \r\n  title = 'Charter',\r\n  legend_pos=\"none\"\r\n) + theme(plot.title = element_text(hjust = 0.5))\r\n\r\ncharter\r\n\r\n\r\n\r\n\r\nMaking one for Non-selective High Schools using a third color.\r\n\r\n\r\nnonselective <- waffle(\r\n  c(`Graduation` = 6, `No Graduation` = 4), \r\n  rows = 1, colors = c(\"black\", \"gray\"),\r\n  use_glyph = \"graduation-cap\", \r\n  glyph_size = 12, \r\n  title = 'Traditional Non-selective',\r\n  legend_pos=\"none\"\r\n) + theme(plot.title = element_text(hjust = 0.5))\r\n\r\nnonselective\r\n\r\n\r\n\r\n\r\nUsing patchwork to combine the three into one image so the viewer can make the comparison!\r\n\r\n\r\nlibrary (patchwork)\r\n\r\npatchwork <- selective / \r\n  charter /\r\n  nonselective + plot_annotation(\r\n  title = 'Graduation Rates by Public High School Type in Baltimore',\r\n  theme = theme (plot.title = element_text (face = \"bold\", size = 18)),\r\n  subtitle = 'Is School Choice decreasing inequity?',\r\n  caption = 'Data from MSDE'\r\n)\r\n\r\n\r\npatchwork \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/distill-preview.png",
    "last_modified": "2021-12-29T14:44:20-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-15-2021-03-12-bechdeltest/",
    "title": "Highest Earning Movies that Pass and Fail the Bechdel Test",
    "description": "This week's Tidy Tuesday challenge looks at the highest earning movies from 1970-2013 that pass and fail the Bechdel test.",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-03-15",
    "categories": [],
    "contents": "\r\nThis week’s Tidy Tuesday challenge was to visualize data about movies from 1970-2013 and whether or not they passed the Bechdel Test. More information can be found about Tidy Tuesday and this challenge can be found here: [R for Data Science Github Page] (https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-03-09/readme.md)\r\nThe Bechdel test was named for cartoonist Alison Bechdel. To pass “the Bechdel test” a movie must have (1) at least two named women, (2) who have a conversation with each other at some point in the movie, (3) the conversation must be about something other than men. This rule or test can help determine if a movie has three-dimensional characters that are women rather than ignoring women entirely, using them as props, or to spur the development of characters who are men. See the Bechdel test comic strip here: [Bechdel Rule Comic Strip] [https://www.npr.org/templates/story/story.php?storyId=94202522]\r\nTo visualize this data, I first loaded packages including showtext, to use Google fonts, ggrepel, to move labels on data points away from each other, and scales, to change the axis labels from long numbers to units in millions and billions.\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE)\r\nlibrary (tidyverse)\r\nlibrary (showtext)\r\nlibrary (ggrepel)\r\nlibrary (scales)\r\n\r\n\r\n\r\nHere I am adding Roboto font family from Google fonts. The font family must be installed on the computer you are using.\r\n\r\n\r\nfont_add_google (\"Roboto\")\r\nshowtext_auto ()\r\n\r\n\r\n\r\nReading in data.\r\n\r\n\r\n#read in the data manually\r\nmovies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/movies.csv')\r\n\r\n\r\n\r\nLooking through the lists of movies, there are definitely those that stand out as big blockbusters that made a lot more money than other movies. I wondered which high-earning movies did and did not pass the Bechdel test. I decided to explore more in this area with a reduced data set with only year, movie title, a variable named binary coded as PASS or FAIL (in relation to the Bechdel test), and domestic gross earning adjusted for 2013.\r\n\r\n\r\n#select only needed variables for reduced dataset\r\nsm <- select (movies, year, title, binary, domgross_2013)\r\n\r\n\r\n\r\nThe domestic gross earnings for 2013 variable was in character format so I needed to switch it to a number so it could act as an axis. I also made a label where I divided the number by one million and rounded to one digit.\r\n\r\n\r\n#reformat domgross_2013 \r\n#changing to numeric\r\nsm$domgross_2013_num <- as.numeric(sm$domgross_2013)\r\n\r\n#make labels variable\r\nsm2 <- sm %>%\r\n  mutate (labels = round(domgross_2013_num/1000000, digits =1))\r\n\r\nsm2$labels <- as.character (sm2$labels)\r\n\r\n\r\n\r\nThen I used slice_max () to select the top 5 highest-earning movies that passed the test and the top 5 highest-earning movies that failed the test and combined them into one dataset.\r\n\r\n\r\npasses  <- sm2 %>%\r\n  filter (binary == \"PASS\")%>%\r\n   slice_max (domgross_2013_num, n = 5)\r\n\r\nfails <- sm2 %>%\r\n  filter (binary == \"FAIL\")%>%\r\n   slice_max (domgross_2013_num, n = 5)\r\n\r\nd <- rbind (passes, fails)\r\n\r\n\r\n\r\nMaking the plot! This week I learned how to use the scales:: label_number_si () function to format movie earnings in millions and billions and the guides () functions to turn off legends for color and size. Using facet_wrap with binary creates two plots, one for the year and earnings of failing movies and one for the year and earnings of passing movies.\r\n\r\n\r\np <- ggplot (d, aes (x=year, y=domgross_2013_num, size = domgross_2013_num, label = title, color = binary)) +\r\n  geom_point (aes (color = binary)) +\r\n \r\n  geom_text_repel (show.legend = FALSE, color = \"black\") +\r\n  scale_size(range = c(6, 12), name=\"Gross Earnings in $\", labels = comma) +\r\n  scale_y_continuous (labels = scales::label_number_si(), limits = c(500000000, 2500000000)) +\r\n  guides (color = FALSE, size = FALSE) +\r\n  facet_wrap (~binary, nrow = 2) +\r\n  theme (text = element_text (size = 18))\r\n  \r\np\r\n\r\n\r\n\r\n\r\nFinally I added some colors and tried to make the plot more visually appealing. Next I want to learn ggtext so I can do more with text color.\r\n\r\n\r\np2 <-   p + theme (text = element_text (family = \"Roboto\",  size = 24, color = \"black\"),\r\n                      plot.title = element_text ( face = \"bold\", size = 30, color = \"black\"),\r\n                      plot.subtitle = element_text (lineheight = 0.4),\r\n                      panel.grid = element_blank (),\r\n                      panel.background = element_rect(color = \"black\", fill = \"white\"),\r\n                      plot.background = element_rect(color = \"black\", fill = \"ivory\"),\r\n                      strip.background = element_rect (fill = \"peachpuff\", color = \"black\"),\r\n                      axis.text.y = element_text (color = \"black\"),\r\n                      axis.text.x = element_text (color = \"black\"),\r\n                      axis.line.x = element_line (color = \"black\"),\r\n                      axis.line.y = element_line (color = \"black\"),\r\n                      axis.ticks.y = element_blank (),\r\n                      axis.ticks.x = element_blank (),\r\n                      plot.margin = margin (0.5, 0.5, 0.5, 0.5, \"cm\")) +\r\n  labs ( x = \" \",\r\n         y = \"$ earned\",\r\n         title = \"Top Earning Movies 1970-2013 by Bechdel Test Status\",\r\n         subtitle = \"Do your favorites pass or fail?\",\r\n         caption = \"Data from fivethirtyeight | Graphic @joieprout\") +\r\n    scale_color_manual (values = c(\"skyblue\", \"lightcoral\"))\r\n\r\np2\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-03-15-2021-03-12-bechdeltest/2021-03-12-bechdeltest_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-12-29T14:44:20-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-24-TidyTuesday-21-Week9/",
    "title": "Tidy Tuesday 2021, Week 9",
    "description": "Using GGplot to make scatterplots looking at gender, race, age and earnings in the US",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-02-28",
    "categories": [],
    "contents": "\r\nThis week’s Tidy Tuesday challenge included data from the Bureau of Labor Statistics (BLS). The data I selected included a break down of weekly earnings over time from 2010-2020 by gender, race, and age.\r\nKnowing that all of these factors influence how much people are paid, I created two scatterplots (one for men and one for women) of earnings over time with race indicated by point color and age group indicated by shape.\r\n\r\n\r\nlibrary (tidyverse)\r\nlibrary (lubridate)\r\nlibrary (showtext)\r\nlibrary (RColorBrewer)\r\nfont_add_google (\"Roboto\")\r\nshowtext_auto ()\r\n# Get the Data\r\nearn <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-02-23/earn.csv')\r\n\r\n\r\n\r\n\r\n\r\nd <- earn %>%\r\n  select (sex, race, age, ethnic_origin, year, quarter, median_weekly_earn) %>%\r\n  filter (age == \"16 to 24 years\"| age == \"25 to 54 years\" | age == \"55 years and over\") %>%\r\nmutate(date = (yq(paste(year, quarter, sep = \"-\")))) # change year and quarter into date format\r\n\r\n\r\n\r\n\r\n\r\nplot <- ggplot (d %>% filter (ethnic_origin != \"Hispanic or Latino\" & race != \"All Races\" & sex != \"Both Sexes\"), aes (x=date, y=median_weekly_earn, color = race, shape = age)) +\r\n  geom_point(size = 2) +\r\n  facet_wrap (~sex, ncol = 2)\r\nearnings <- plot + theme (text = element_text (family = \"Roboto\",  size = 30),\r\n         plot.title = element_text (face = \"bold\", size = 32),\r\n         legend.position = \"bottom\",\r\n         legend.key = element_rect (fill = \"#e3e4e1\"),\r\n         legend.background = element_rect (fill = \"#e3e4e1\"),\r\n         panel.grid = element_blank (),\r\n         panel.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         plot.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         axis.text.y = element_text (size = 20, hjust = 0.5),\r\n         axis.line.x = element_line (),\r\n         axis.line.y = element_line (),\r\n         axis.ticks.y = element_blank (),\r\n         axis.ticks.x = element_blank (),\r\n         legend.box = \"vertical\",\r\n         plot.margin = margin (0.5, 0.5, 0.5, 0.5, \"cm\")) +\r\n  labs (title = \"Earnings of US Employees by Gender, Race, and Age\", \r\n        y = \"Median Weekly Earnings in $\", \r\n        x = \" \",\r\n        color = \"Race\",\r\n        shape = \"Age\",\r\n        caption = \"Data from US BLS | Graphic @joieprout\") +\r\n  scale_color_brewer(palette = \"Dark2\")\r\n\r\nggsave (\"earnings.png\", height = 6, width = 10, dpi = \"retina\")\r\n\r\n\r\n\r\n\r\n\r\nlibrary (knitr)\r\ninclude_graphics (\"earnings.png\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-24-TidyTuesday-21-Week9/earnings.png",
    "last_modified": "2021-12-29T14:44:20-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-BHM/",
    "title": "Notable Black First Achievements Data Visualization",
    "description": "A blog post outlining how I used ggplot to make stacked and facetted area plots looking at cumulative events over time.",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\r\nThis is my attempt at making a data viz using the tidyverse and ggplot for a challenge from @DiversityinData for Black History Month. The data set from blackpast.org (available at https://data.world/diversityindata/february-2021-black-history-month) included a list of notable Black “first achievements” during the years 1738 - 2021 by category, along with the following quotes:\r\n\r\nThe ‘first’ achievements in various fields have historically marked footholds, often leading to more widespread cultural change. The shorthand phrase for this is “breaking the color barrier”\r\n\r\n\r\n“[Black] history is about much more than chronicling a series of “firsts.” The time and place of a breakthrough reflects not only remarkable individual achievement but is itself an indication of the progress or lack of progress of black people in realizing the centuries-old intertwined goals of freedom, equality, and justice.\" ~ blackpast.org\r\n\r\n\r\nDatasource: Wikipedia & Kaggle\r\n\r\nThese quotes emphasized the importance of BOTH individual and collective impact. I pictured one big wave of impact made up of smaller individual events. I decided to go with a stacked area chart with category of events being the third factor indicated by color. I wanted to have an interactive graph where the viewer could hover over a point and get a tooltip with the specific event, person involved, and other information but do not know how to use plotly well enough yet. Maybe some day!\r\nHere I am loading packages, reading in the data, and changing the color palette and fonts.\r\n\r\n\r\n#Notable Black Achievements\r\nlibrary (tidyverse)\r\nlibrary (showtext)\r\nlibrary (patchwork)\r\nlibrary (knitr)\r\n\r\ndf <- read.csv(\"https://query.data.world/s/conu5g63p5djt76z4v3x2liephcggn\", \r\n               header=TRUE, stringsAsFactors=FALSE)\r\n\r\n#color palette\r\nbfly.col <- c(\"5F706A\", \"#D5B59B\", \"#C84F36\", \"#AE8B6D\", \"#2C2B2C\", \"#61A89D\", \"#E7965F\", \"#793324\")\r\n\r\n## Loading Google fonts (https://fonts.google.com/)\r\nfont_add_google(\"Bebas Neue\")\r\nfont_add_google (\"Lato\")\r\n\r\nshowtext_auto ()\r\n\r\n\r\n\r\nNow getting the dataset into shape to make a stacked wave chart with year as the x axis, cumulative number of achievements as the y axis, and category of achievement as a third factor differentiated by color.\r\n\r\n\r\ndf1 <- df %>%\r\n  group_by (year, category) %>%\r\n  summarize (n = n()) %>%\r\n  ungroup %>%\r\n  group_by (category) %>%\r\n  mutate (csum = cumsum (n))\r\n\r\nallyears <- df1 %>% \r\n  group_by(category) %>% \r\n  complete(year = full_seq(1738:2021, 1)) %>% \r\n  group_by (category) %>%\r\n  fill(csum)\r\n\r\nallyears[is.na(allyears)] <- 0\r\nallyears$category <- as.factor (allyears$category)\r\n\r\n\r\n\r\nMaking the stacked area chart..\r\n\r\n\r\nplot <- ggplot (allyears, aes (x=year, y=csum, fill = category)) + \r\n  geom_area () + \r\n  scale_y_continuous (position = \"right\")\r\n\r\nplot_total <- plot + theme (text = element_text (family = \"Lato\", size = 15),\r\n                                   legend.position = \"none\",\r\n                   panel.grid = element_blank (),\r\n                   axis.line.x = element_line (),\r\n                   axis.text.y = element_blank (),\r\n                   axis.ticks.x = element_blank (),\r\n                   axis.ticks.y = element_blank (),\r\n                   panel.background = element_rect(color = \"#E3E4E1\", fill = \"#E3E4E1\"), #ice cube\r\n                   plot.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\")) +\r\n            scale_fill_manual (values = bfly.col) +\r\n  labs (x = \"Year\", y = \"Achievements\")\r\n\r\nplot_total\r\n\r\n\r\n\r\n\r\nOne of the limitations of the stacked area chart is that it is difficult to compare the patterns between categories. To help address this, I used facet_wrap to make 8 smaller plots, one for each category. I kept the colors the same so the viewer can hopefully link the information from the stacked plot to the facetted plot.\r\n\r\n\r\nfacets <- ggplot (allyears, aes (x=year, y=csum, fill = category)) + \r\n    geom_area () +\r\n    facet_wrap(~category, nrow = 2, strip.position = \"bottom\") +\r\n  theme (text=element_text (family = \"Lato\", size = 15))\r\n\r\nfacets\r\n\r\n\r\n\r\n\r\nThen I added in the title, colors, and theme elements.\r\n\r\n\r\nfacets_final <- facets +  \r\n  labs (x = \" \", y = \" \", caption = \"Data from blackpast.org | for @DiversityinData | graphic @joieprout\", title = \"\\nBlack history is about more than chronicling a series of 'firsts'\",\r\n                  subtitle = \"\\nThe time and place of a breakthrough reflects \\nnot only remarkable individual achievement\\nbut is itself an indication of the progress \\nor lack of progress of Black people\\nin realizing the centuries-old intertwined goals\\nof freedom, equality, and justice. \\n\\n~ blackpast.org\") +\r\n  scale_fill_manual (values = c(\"5F706A\", \"#D5B59B\", \"#C84F36\", \"#AE8B6D\", \"#2C2B2C\", \"#61A89D\", \"#E7965F\", \"#793324\")) +\r\n  theme (text = element_text (family = \"Lato\", size = 20),\r\n            plot.title = element_text (family = \"Bebas Neue\", face = \"bold\", size = 30),\r\n                   plot.subtitle = element_text (family = \"Lato\", face = \"italic\", size = 20),\r\n         legend.position = \"none\",\r\n         strip.background = element_rect(\r\n           color=\"#D5B59B\", fill=\"#d5b59b\", size=1.5, linetype=\"solid\"\r\n         ),\r\n         panel.grid = element_blank (),\r\n         panel.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         plot.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         axis.text.y = element_blank (),\r\n         axis.ticks.y = element_blank (),\r\n         axis.ticks.x = element_blank ()) \r\n\r\nfacets_final\r\n\r\n\r\n\r\n\r\nFinally, I used the patchwork package’s inset element function to put the combined area chart at the top of the facetted charts. I really wanted to have both available on the same visualization.\r\nLooking at both the stacked chart and the small multiple charts shows both the collective impact and thst while many achievements have been made in some areas, other areas, like Law, seem to have more limited opportunities and support for achievement by Black people in the United States.\r\n\r\n\r\ncombo <- facets_final + \r\n  inset_element(plot_total, left = 0.5, bottom = 0.6, right = 0.9, top = 0.9, align_to = 'full')\r\ncombo\r\n\r\n\r\n\r\n\r\nAn ongoing problem I have is that if I make a chart that looks okay for the blog then I have to change the font sizing around to make an image file where all the words aren’t teeny-tiny. I am not sure if there is a better way around this? A search is underway. Here is what I managed for this image. . .\r\n\r\n\r\n\r\n\r\n\r\ninclude_graphics (\"combo.png\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nfacets_final_img <- facets +  \r\n  labs (x = \" \", y = \" \", caption = \"Data from blackpast.org | for @DiversityinData | graphic @joieprout\", title = \"\\nBlack history is about more than chronicling a series of 'firsts'\",\r\n                  subtitle = \"\\nThe time and place of a breakthrough reflects \\nnot only remarkable individual achievement\\nbut is itself an indication of the progress \\nor lack of progress of Black people\\nin realizing the centuries-old intertwined goals\\nof freedom, equality, and justice.\\n~ blackpast.org\") +\r\n  scale_fill_manual (values = c(\"5F706A\", \"#D5B59B\", \"#C84F36\", \"#AE8B6D\", \"#2C2B2C\", \"#61A89D\", \"#E7965F\", \"#793324\")) +\r\n  theme (text = element_text (family = \"Lato\", size = 18),\r\n                plot.title = element_text (family = \"Bebas Neue\", face = \"bold\", size = 30),\r\n                plot.subtitle = element_text (family = \"Lato\", face = \"italic\", lineheight = 0.8, size = 16),\r\n         legend.position = \"none\",\r\n         strip.background = element_rect(\r\n           color=\"#D5B59B\", fill=\"#d5b59b\", size=1.5, linetype=\"solid\"\r\n         ),\r\n         panel.grid = element_blank (),\r\n         panel.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         plot.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\"),\r\n         axis.text.y = element_blank (),\r\n         axis.ticks.y = element_blank (),\r\n         axis.ticks.x = element_blank ()) \r\n\r\n#Combined wave chart with bigger font\r\nplot_total_img <- plot + theme (text = element_text (family = \"Lato\", size = 18),\r\n                                   legend.position = \"none\",\r\n                   panel.grid = element_blank (),\r\n                   axis.line.x = element_line (),\r\n                   axis.text.y = element_blank (),\r\n                   axis.ticks.x = element_blank (),\r\n                   axis.ticks.y = element_blank (),\r\n                   panel.background = element_rect(color = \"#E3E4E1\", fill = \"#E3E4E1\"), #ice cube\r\n                   plot.background = element_rect(color = \"#e3e4e1\", fill = \"#e3e4e1\")) +\r\n            scale_fill_manual (values = bfly.col) +\r\n  labs (x = \"Year\", y = \"Achievements\")\r\n\r\ncombo <- facets_final_img + \r\n  inset_element(plot_total_img, left = 0.5, bottom = 0.6, right = 1, top = 0.8, align_to = 'full')\r\n\r\nggsave (\"combo.pdf\", height = 8, width = 10)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-22-BHM/distill-preview.png",
    "last_modified": "2021-12-29T14:44:20-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-06-welcome/",
    "title": "Tidy Tuesday 2021, Week 7 ",
    "description": "Data on Wealth and Income Over Time | Urban Institute & US Census",
    "author": [
      {
        "name": "Joanna Prout",
        "url": {}
      }
    ],
    "date": "2021-02-11",
    "categories": [],
    "contents": "\r\nFor this week’s Tidy Tuesday challenge we looked at data about wealth and inequality in the United States. I did a simple area plot of the median wealth of Black, Hispanic, and White families from 1989-2016. The disparity is huge! The visualization shows that while the wealth of White families increased and decreased as a function of economic changes; the wealth of Blank and Hispanic families remained low.\r\n\r\n\r\nmedian_wealth_race <- race_wealth %>% \r\n  filter (type == \"Median\") %>%\r\n  filter (year >= 1989) %>%\r\n  filter (race != \"Non-White\")\r\n\r\n## Automatically use showtext to render text\r\nshowtext_auto()\r\n\r\nplot <- ggplot (median_wealth_race, \r\n        aes (x = year, \r\n             y = wealth_family, \r\n             group=race, \r\n             fill = race)) + \r\n geom_area(color = \"white\") +\r\n  labs (title = \"Median Wealth of US Families by Race Over Time\",\r\n          subtitle = \"In Dollars Normalized for 2016\",\r\n          caption = \"Data from Urban Institute and US Census | Graphic by @joieprout\",\r\n          x = \" \",\r\n          y = \" \") +\r\n  facet_wrap (~race) +\r\n  theme (text = element_text (family = \"Montserrat\", size = 22),\r\n         plot.title = element_text (face = \"bold\", size = 24),\r\n         legend.position = \"none\",\r\n         panel.grid = element_blank (),\r\n         axis.text.x = element_text (size = 14),\r\n         axis.text.y = element_text (size = 14),\r\n         axis.ticks.y = element_blank (),\r\n         axis.ticks.x = element_blank (),\r\n          panel.background = element_rect(color = \"gray93\", fill = \"gray93\"),\r\n          plot.background = element_rect(color = \"white\", fill = \"white\"),\r\n          strip.background = element_rect(color = \"gray80\", fill = \"gray80\"),    \r\n          plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"))+\r\n  scale_y_continuous(label = comma) +\r\n  scale_fill_brewer(palette=\"Dark2\")\r\n\r\nplot\r\n\r\n\r\n\r\nggsave (\"wealthplot.pdf\", width = 10, height = 6)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-06-welcome/distill-preview.png",
    "last_modified": "2021-12-29T14:44:20-05:00",
    "input_file": {}
  }
]
